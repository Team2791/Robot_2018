package org.usfirst.frc.team2791.robot.commands.lift;
import static java.lang.Math.abs;
import static org.usfirst.frc.team2791.robot.util.Constants.CLOSE;
import static org.usfirst.frc.team2791.robot.util.Constants.FAR_AWAY;
import static org.usfirst.frc.team2791.robot.util.Constants.LARGE_NUMBER;
import static org.usfirst.frc.team2791.robot.util.Constants.SMALL_NUMBER;

import org.usfirst.frc.team2791.robot.Robot;

import edu.wpi.first.wpilibj.command.Command;

public class GoToHeight extends Command {
    private double targetHeight;
    public GoToHeight(double height) {
        super("GoToHeight");
        requires(Robot.lift);
        targetHeight = height;
    }

    protected void initialize() {

    }

    @Override
    protected void execute(){
<<<<<<< HEAD
        double diff = Robot.lift.getHeight() - targetHeight;
        int diffSign = (int) Math.signum(diff);
        if (abs(diff) > FAR_AWAY) {
            Robot.lift.setPower(-diffSign * LARGE_NUMBER);
            Robot.lift.setBreak(false);
        } else if (abs(diff) > CLOSE) {
            Robot.lift.setPower(-diffSign * SMALL_NUMBER);
            Robot.lift.setBreak(false);
        } else {
            Robot.lift.setPower(0);
            Robot.lift.setBreak(true);
=======
            double diff = Robot.lift.getHeight() - targetHeight;
            int diffSign = (int) Math.signum(diff);
            if (abs(diff) > FAR_AWAY) {
                Robot.lift.setPower(-diffSign * LARGE_NUMBER);
                Robot.lift.setBreak(false);
            } else if (abs(diff) > CLOSE) {
                Robot.lift.setPower(-diffSign * SMALL_NUMBER);
                Robot.lift.setBreak(false);
            } else {
                Robot.lift.setPower(0);
                Robot.lift.setBreak(true);
            }

>>>>>>> 88f49d91ff364b547ef8617adfa00ac563fc3edd
        }
    }
    
    @Override
    public boolean isFinished() {
        return false;
    }
    @Override
    protected void end () {

    }
    protected void interrupted () {

    }
}
